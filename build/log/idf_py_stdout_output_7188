[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\project\ESP32\WIFI_config\build\bootloader\esp-idf\esptool_py && c:\esp_v5\tools\Espressif\python_env\idf5.1_py3.8_env\Scripts\python.exe C:/esp_v5/idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/project/ESP32/WIFI_config/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable WIFI_config.elf
[6/7] Generating binary image from built executable
esptool.py v4.6.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/project/ESP32/WIFI_config/build/WIFI_config.bin
[7/7] cmd.exe /C "cd /D D:\project\ESP32\WIFI_config\build\esp-idf\esptool_py && c:\esp_v5\tools\Espressif\python_env\idf5.1_py3.8_env\Scripts\python.exe C:/esp_v5/idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/project/ESP32/WIFI_config/build/partition_table/partition-table.bin D:/project/ESP32/WIFI_config/build/WIFI_config.bin"
WIFI_config.bin binary size 0x2c380 bytes. Smallest app partition is 0x100000 bytes. 0xd3c80 bytes (83%) free.
